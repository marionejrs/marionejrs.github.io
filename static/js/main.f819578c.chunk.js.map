{"version":3,"sources":["background/logo/BackgroundLogo.png","contact/ContactEmail.tsx","sidebar/item/SidebarItem.tsx","sidebar/Sidebar.tsx","header/Header.tsx","main/MainContainer.tsx","background/logo/BackgroundLogo.tsx","background/effect/BackgroundEffect.tsx","menu/trigger/MenuTrigger.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","ContactEmail","react_default","a","createElement","className","href","concat","this","props","email","width","height","x1","y1","x2","y2","style","stroke","strokeWidth","Component","SidebarItem","_this$props","title","link","Sidebar","SidebarItem_SidebarItem","Header","MainContainer","Header_Header","BackgroundLogo","src","logo","alt","BackgroundEffect","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","containerElement","camera","scene","renderer","particles","count","windowHalfX","windowHalfY","window","innerWidth","innerHeight","aspect","updateProjectionMatrix","setSize","_this2","PerspectiveCamera","position","y","z","rotation","x","positions","Float32Array","NUM_OF_PARTICLES","scales","AMOUNTX","incrementI","incrementJ","indexX","indexY","geometry","BufferGeometry","addAttribute","BufferAttribute","material","ShaderMaterial","uniforms","color","value","Color","vertexShader","fragmentShader","Points","Scene","add","WebGLRenderer","alpha","antialias","setPixelRatio","devicePixelRatio","setClearColor","appendChild","domElement","animate","addEventListener","onWindowResize","requestAnimationFrame","bind","renderCanvas","positionAttrib","getAttribute","scaleAttrib","array","Math","sin","needsUpdate","render","_this3","ref","container","MenuTrigger","size","divider","fill","App","ContactEmail_ContactEmail","Sidebar_Sidebar","MainContainer_MainContainer","MenuTrigger_MenuTrigger","BackgroundLogo_BackgroundLogo","BackgroundEffect_BackgroundEffect","Boolean","location","hostname","match","WebFont","load","google","families","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f819578c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/BackgroundLogo.d177d6bb.png\";","import React, { Component } from 'react';\nimport './ContactEmail.scss';\nimport ContactEmailProps from './ContactEmailProps';\n\nexport default class ContactEmail extends Component<ContactEmailProps> {\n    render() {\n        return (\n            <div className={'contact-container'}>\n                <a href={`mailto:${this.props.email}`}>{this.props.email}</a>\n                <svg width=\"150\" height=\"5\" className=\"item-bottom-border\">\n                    <line x1=\"0\" y1=\"2\" x2=\"150\" y2=\"2\" style={{ stroke: \"#ffffff\", strokeWidth: 1}} />\n                </svg>\n            </div>\n        );\n    }\n}","import \"./SidebarItem.scss\";\nimport React, { Component } from \"react\";\nimport SidebarItemProps from \"./SidebarItemProps\";\n\n\nexport default class SidebarItem extends Component<SidebarItemProps> {\n    render() {\n        let { title, link } = this.props;\n        return (\n            <li>\n                <a href={link}>{title}</a>\n                <svg width=\"60\" height=\"5\" className=\"sidebar-item-bottom-border\">\n                    <line x1=\"0\" y1=\"2\" x2=\"60\" y2=\"2\" style={{ stroke: \"#ffffff\", strokeWidth: 1}} />\n                </svg>\n            </li>\n        );\n    }\n}","import './Sidebar.scss'\nimport React, { Component } from 'react';\nimport SidebarItem from './item/SidebarItem';\n\nexport default class Sidebar extends Component {\n    render() {\n        return (\n            <nav>\n                <ul>\n                    <SidebarItem title=\"Home\" link=\"/\"></SidebarItem>\n                    <SidebarItem title=\"About\" link=\"#about\"></SidebarItem>\n                    <SidebarItem title=\"Projects\" link=\"#projects\"></SidebarItem>\n                    <SidebarItem title=\"Contact\" link=\"#contact\"></SidebarItem>\n                </ul>\n            </nav>\n        );\n    }\n}","import './Header.scss';\nimport React, { Component } from 'react';\n\nexport default class Header extends Component {\n    render() {\n        return (\n            <header>\n                <h3>Hi, I'm Marione!</h3>\n                <div className={'secondary-header'}>\n                I develop web and mobile applications\n                </div>\n                <div className={'catchline'}>\n                Do you want to start building your ideas?\n                Perhaps I can help.\n                </div>\n            </header>\n        );\n    }\n}","import './MainContainer.scss';\nimport React, { Component } from \"react\";\nimport Header from \"../header/Header\";\n\nexport default class MainContainer extends Component {\n    render() {\n        return (\n            <main>\n                <Header></Header>\n            </main>\n        );\n    }\n}","import React, { Component } from 'react';\nimport logo from './BackgroundLogo.png';\nimport './BackgroundLogo.scss';\n\nexport default class BackgroundLogo extends Component {\n    render() {\n        return <img className={\"background-logo\"} src={logo} alt=\"Logo\" />;\n    }\n}","import \"./BackgroundEffect.scss\";\nimport React, { Component } from \"react\";\nimport {\n    PerspectiveCamera,\n    Scene,\n    BufferGeometry,\n    BufferAttribute,\n    ShaderMaterial,\n    Color,\n    Points,\n    WebGLRenderer } from \"three\";\n\nlet SEPARATION = 40;\nlet AMOUNTX = 130;\nlet AMOUNTY = 35;\nlet NUM_OF_PARTICLES = AMOUNTX * AMOUNTY;\n\nexport default class BackgroundEffect extends Component {\n\n    containerElement : HTMLDivElement;\n    camera : PerspectiveCamera;\n    scene : Scene;\n    renderer : WebGLRenderer;\n    particles : Points;\n    count : number;\n    windowHalfX : number;\n    windowHalfY : number;\n\n    constructor(props : any) {\n        super(props);\n        this.count = 0;\n    }\n\n    onWindowResize() {\n        this.windowHalfX = window.innerWidth / 2;\n        this.windowHalfY = window.innerHeight / 2;\n        \n        this.camera.aspect = window.innerWidth / window.innerHeight;\n        this.camera.updateProjectionMatrix();\n        \n        this.renderer.setSize( window.innerWidth, window.innerHeight );\n    }\n\n    componentDidMount() {\n        let camera = new PerspectiveCamera( 120, window.innerWidth / window.innerHeight, 1, 10000);\n        camera.position.y = 200;\n        camera.position.z = 100;\n        camera.rotation.x = 0.35;\n        this.camera = camera;\n\n        let positions = new Float32Array(NUM_OF_PARTICLES * 3);\n        let scales = new Float32Array(NUM_OF_PARTICLES);\n\n        let incrementI = 0;\n        let incrementJ = 0;\n\n        for (let indexX = 0; indexX < AMOUNTX; indexX++) {\n            for (let indexY = 0; indexY < AMOUNTY; indexY++) {\n                positions[incrementI] = indexX * SEPARATION - ( ( AMOUNTX * SEPARATION ) / 2); // x\n                positions[incrementI + 1] = 0; //y\n                positions[incrementI + 2] = indexY * SEPARATION - ( ( AMOUNTY * SEPARATION ) - 10); //z\n            \n                scales[incrementJ] = 1;\n\n                incrementI += 3;\n                incrementJ++;\n            }\n        }\n\n        let geometry = new BufferGeometry();\n        geometry.addAttribute( 'position', new BufferAttribute( positions, 3 ) );\n        geometry.addAttribute( 'scale', new BufferAttribute( scales, 1 ) );\n\n        let material = new ShaderMaterial({\n            uniforms : {\n                color: { value: new Color( 0x939393 ) },\n            },\n            vertexShader : `attribute float scale;\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\n\t\t\t\tgl_PointSize = scale * ( 35.0 / - mvPosition.z );\n\n\t\t\t\tgl_Position = projectionMatrix * mvPosition;\n\n\t\t\t}`,\n            fragmentShader : `uniform vec3 color;\n\n\t\t\tvoid main() {\n\n\t\t\t\tif ( length( gl_PointCoord - vec2( 0.5, 0.5 ) ) > 0.475 ) discard;\n\n\t\t\t\tgl_FragColor = vec4( color, 1.0 );\n\n\t\t\t}`\n        });\n\n        let particles = new Points(geometry, material);\n        this.scene = new Scene();\n        // this.scene.background = new Color( 0x0000 );\n        this.scene.add(particles);\n        this.particles = particles;\n\n        let renderer = new WebGLRenderer( { alpha : true, antialias : true } );\n        renderer.setPixelRatio( window.devicePixelRatio );\n        renderer.setSize( window.innerWidth, window.innerHeight );\n        renderer.setClearColor( 0xffffff, 0 );\n        this.renderer = renderer;\n\n        this.containerElement.appendChild( renderer.domElement );\n        this.animate();\n\n        window.addEventListener( 'resize', () => { this.onWindowResize() }, false);\n    }\n\n    animate() {\n        requestAnimationFrame( this.animate.bind(this) );        \n        // not necessary as camera will not be moved\n        // camera.position.x += ( mouseX - camera.position.x ) * .05;\n        // camera.position.y += ( - mouseY - camera.position.y ) * .05;\n        // camera.lookAt( scene.position );\n        this.renderCanvas();\n        \n    }\n\n    renderCanvas() {\n        let positionAttrib = (this.particles.geometry as BufferGeometry).getAttribute('position') as BufferAttribute;\n        let scaleAttrib = (this.particles.geometry as BufferGeometry).getAttribute('scale') as BufferAttribute;\n\n        let positions = positionAttrib.array as Float32Array;\n        let scales = scaleAttrib.array as Float32Array;\n\n        let incrementI = 0;\n        let incrementJ = 0;\n\n        for (let indexX = 0; indexX < AMOUNTX; indexX++) {\n            for (let indexY = 0; indexY < AMOUNTY; indexY++) {\n                positions[incrementI + 1] = ( Math.sin( ( indexX + this.count ) * 0.5 ) * 20 ) + ( Math.sin( ( indexY + this.count ) * 0.5 ) * 20 )\n            \n                scales[incrementJ] = ( Math.sin( ( indexX + this.count ) * 0.3 ) + 1 ) * 8 +\n                        ( Math.sin( ( indexY + this.count ) * 0.5 ) + 1 ) * 8;\n\n                incrementI += 3;\n                incrementJ++;\n            }\n        }\n\n        ((this.particles.geometry as BufferGeometry).getAttribute('position') as BufferAttribute).needsUpdate = true;\n        ((this.particles.geometry as BufferGeometry).getAttribute('position') as BufferAttribute).needsUpdate = true;\n\n        this.renderer.render( this.scene, this.camera );\n        this.count += 0.05;\n    }\n\n    render() {\n        return (\n            <div className='particle-container'\n                ref={(container) => this.containerElement = container}>\n            </div>\n        );\n    }\n}","import './MenuTrigger.scss';\nimport React, { Component } from \"react\";\nimport MenuTriggerProps from \"./MenuTriggerProps\";\n\nexport default class MenuTrigger extends Component<MenuTriggerProps> {\n    render() {\n        let { size } = this.props;\n        let divider = size / 5;\n        return (\n            <div className=\"menu-trigger-container\">\n                <svg width={size} height={size} className=\"menu-trigger\">\n                    <rect x=\"0\" y=\"0\" width={size} height={size/10} style={{ fill : \"#fff\" }}/>\n                    <rect x=\"0\" y={divider * 2} width={size} height={size/10} style={{ fill : \"#fff\" }}/>\n                    <rect x=\"0\" y={divider * 4} width={size} height={size/10} style={{ fill : \"#fff\" }}/>\n                </svg>\n            </div>\n        );\n    }\n}","import React from 'react';\n// import logo from './logo.svg';\n// import Particles, { IParticlesParams } from 'react-particles-js'\n// import particle from './particle-config.json'\n// import { GitHub } from 'react-feather';\nimport ContactMail from './contact/ContactEmail';\nimport Sidebar from './sidebar/Sidebar';\nimport MainContainer from './main/MainContainer';\nimport BackgroundLogo from './background/logo/BackgroundLogo';\nimport BackgroundEffect from './background/effect/BackgroundEffect';\nimport MenuTrigger from \"./menu/trigger/MenuTrigger\";\nimport './App.scss';\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"container\">\n      <section className=\"top-content\">\n        <ContactMail email=\"marionejr.semilla@gmail.com\"></ContactMail>\n      </section>\n      <section className=\"main-content\">\n        <Sidebar></Sidebar>\n        <MainContainer></MainContainer>\n        <MenuTrigger size={20}></MenuTrigger>\n      </section>\n      <BackgroundLogo></BackgroundLogo>\n      <BackgroundEffect></BackgroundEffect>\n    </div>\n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'normalize.css';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport WebFont from 'webfontloader';\n\nWebFont.load({\n    google: {\n      families: ['Roboto:400,700', 'Montserrat:300,400', 'sans-serif']\n    }\n  });\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}