{"version":3,"sources":["contact/ContactEmail.tsx","sidebar/item/SidebarItem.tsx","sidebar/Sidebar.tsx","pages/home/Home.tsx","components/ExperienceBox/index.tsx","pages/about/About.tsx","components/ContactIcon/index.tsx","main/MainRoutes.ts","pages/experience/Experience.tsx","pages/contact/Contact.tsx","main/MainContainer.tsx","background/effect/BackgroundEffect.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["ContactEmail","className","href","this","props","email","width","height","x1","y1","x2","y2","style","stroke","strokeWidth","Component","SidebarItem","title","link","to","Sidebar","Home","ExperienceBox","experience","company","yearsWorked","position","logo","src","About","ContactIcon","iconComponent","target","rel","MainRoutes","path","exact","component","MainContainer","map","route","index","key","BackgroundEffect","containerElement","camera","scene","renderer","particles","count","windowHalfX","windowHalfY","window","innerWidth","innerHeight","aspect","updateProjectionMatrix","setSize","PerspectiveCamera","y","z","rotation","x","positions","Float32Array","NUM_OF_PARTICLES","scales","AMOUNTX","incrementI","incrementJ","indexX","indexY","geometry","BufferGeometry","addAttribute","BufferAttribute","material","ShaderMaterial","uniforms","color","value","Color","vertexShader","fragmentShader","Points","Scene","add","WebGLRenderer","alpha","antialias","setPixelRatio","devicePixelRatio","setClearColor","appendChild","domElement","animate","addEventListener","onWindowResize","requestAnimationFrame","bind","renderCanvas","positionAttrib","getAttribute","scaleAttrib","array","Math","sin","needsUpdate","render","ref","container","App","Boolean","location","hostname","match","WebFont","load","google","families","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8d8692ae.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './ContactEmail.scss';\nimport ContactEmailProps from './ContactEmailProps';\n\nexport default class ContactEmail extends Component<ContactEmailProps> {\n    render() {\n        return (\n            <div className={'contact-container'}>\n                <a href={`mailto:${this.props.email}`}>{this.props.email}</a>\n                <svg width=\"150\" height=\"5\" className=\"item-bottom-border\">\n                    <line x1=\"0\" y1=\"2\" x2=\"150\" y2=\"2\" style={{ stroke: \"#ffffff\", strokeWidth: 1}} />\n                </svg>\n            </div>\n        );\n    }\n}","import \"./SidebarItem.scss\";\nimport React, { Component } from \"react\";\nimport SidebarItemProps from \"./SidebarItemProps\";\nimport {\n    Link\n  } from \"react-router-dom\";\n\nexport default class SidebarItem extends Component<SidebarItemProps> {\n    render() {\n        let { title, link } = this.props;\n        return (\n            <li>\n                <Link to={link}>{title}</Link>\n                <svg width=\"60\" height=\"5\" className=\"sidebar-item-bottom-border\">\n                    <line x1=\"0\" y1=\"2\" x2=\"60\" y2=\"2\" style={{ stroke: \"#ffffff\", strokeWidth: 1}} />\n                </svg>\n            </li>\n        );\n    }\n}","import './Sidebar.scss'\nimport React, { Component } from 'react';\nimport SidebarItem from './item/SidebarItem';\n\nexport default class Sidebar extends Component {\n    render() {\n        return (\n            <nav>\n                <ul>\n                    <SidebarItem title=\"Home\" link=\"\"></SidebarItem>\n                    <SidebarItem title=\"About\" link=\"about\"></SidebarItem>\n                    <SidebarItem title=\"Experience\" link=\"experience\"></SidebarItem>\n                    {/* <SidebarItem title=\"Skills\" link=\"skills\"></SidebarItem>\n                    <SidebarItem title=\"Projects\" link=\"projects\"></SidebarItem> */}\n                    <SidebarItem title=\"Contact\" link=\"contact\"></SidebarItem>\n                </ul>\n            </nav>\n        );\n    }\n}","import React, { FC } from \"react\";\nimport './Home.scss';\n\nconst Home : FC = () => {\n    return (\n        <div className=\"main-page home-page\">\n            <div className=\"home\">\n                <div className=\"main-title\">I'm Marione and I love to React.</div>\n                <div className=\"main-subtitle\">Do you have a problem that needs solving? Perhaps I can help.</div>\n            </div>\n        </div>\n    );\n}\nexport default Home;","import React, { FC } from \"react\";\nimport './ExperienceBox.scss';\n\nexport interface Experience {\n    company: string,\n    yearsWorked: string\n    position: string,\n    logo: any\n}\n\nconst ExperienceBox : FC<Experience> = (experience : Experience) => {\n    let { company, yearsWorked, position, logo} = experience;\n\n    return (\n        <div className=\"experience-box\">\n            <div className=\"company-logo\">\n                <img src={logo}></img>\n            </div>\n            <div className=\"description\">\n                <div className=\"company\">{company}</div>\n                <div className=\"years-worked\">{yearsWorked}</div>\n                <div className=\"position\">{position}</div>\n            </div>\n        </div>\n    );\n}\n\nexport default ExperienceBox;","import React, { FC } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport './About.scss';\nimport ExperienceBox from \"../../components/ExperienceBox\";\n\nconst About : FC = () => {\n    return (\n        <div className=\"main-page about-page\">\n            <div className=\"main-description about-column\">\n                <div className=\"main-title\">About Me</div>\n                <p>\n                    I am Marione Semilla but you can call me JR.<br/>\n                    <br/>\n                    I am a <span className=\"bold\">React Software Engineer</span> based in Metro Manila, Philippines<br/> \n                    specializing in <span className=\"bold\">Web and Mobile Development</span>.\n                    I love learning new things,<br/> travel, history Japanese culture and wholesome <em>memes</em>.<br/>\n                    <br/>\n                    I am currently working as a <span className=\"bold\">Mobile Application Developer</span> under Ahsay Limited <br/>\n                    for the past 10 months. I've worked for two other companies with an overall<br/><em>six years</em> in the industry.\n                    I started out as a Java developer for three years but<br/> transitioned to web development in mid-2018.<br/>\n                    <br/>\n                    I started fiddling with React since 2015 and I've taught React. However, my first<br/>\n                    real work experience was in late-2018 when was given a project in React Native.<br/>\n                    <br/>\n                    On my spare time, I mostly watch Netflix, occassionally graphic design,<br/>\n                    implementing my pet projects and whatever floats my boat really.<br/>\n                    I also cook and I am open to learning baking in the future.<br/>\n                    <br/>\n                    <em>You might be wondering what I can bring to the table?</em><br/>\n                    I am quick learner and adaptable to any situation and I have a detailed and <br/>\n                    organized approach in handling problems. I maintain my code clean and will <br/>\n                    follow stringent coding standards. If you need someone like me, feel free to<br/>\n                    <Link to=\"/contact\">contact</Link> me any time.<br/>\n                    <br/>\n                    <em>Where am I headed?</em><br/>\n                    I am eventually working my way into becoming a <span className=\"bold\">Software Architect</span>.<br/>\n                </p>\n            </div>\n            <div className=\"main-description about-column\">\n                <div className=\"main-title\">Experience</div>\n                <div className=\"experience-rows\">\n                    <ExperienceBox\n                        company={\"Ahsay Systems Corporation Limited\"}\n                        logo={\"/company/ahsay.png\"}\n                        position={\"Mobile Application Developer\"}\n                        yearsWorked={\"June 2019 - \"}></ExperienceBox>\n                    <ExperienceBox\n                        company={\"PCCW Solutions\"}\n                        logo={\"/company/pccw.jpg\"}\n                        position={\"Solutions Developer\"}\n                        yearsWorked={\"May 2018 - May 2019\"}></ExperienceBox>\n                    <ExperienceBox\n                        company={\"Nokia Networks\"}\n                        logo={\"/company/nokia.png\"}\n                        position={\"R&D Engineer II\"}\n                        yearsWorked={\"June 2014 - May 2018\"}></ExperienceBox>\n                </div>\n            </div>\n        </div>\n    );\n}\nexport default About;","import React, { FC, ReactNode } from \"react\";\nimport './ContactIcon.scss';\n\nexport interface ContactIconProps {\n    iconComponent : ReactNode,\n    link: string\n}\n\nconst ContactIcon : FC<ContactIconProps> = (props : ContactIconProps) => {\n    let { iconComponent, link } = props;\n\n    return (\n        <a className=\"contact-icon\" href={link} target=\"_blank\" rel=\"noopener noreferrer\">\n            {iconComponent}\n        </a>\n    );\n}\n\nexport default ContactIcon;","import { RouteProps } from \"react-router\";\nimport Home from \"../pages/home/Home\";\nimport About from \"../pages/about/About\";\nimport Skills from \"../pages/skills/Skills\";\nimport Projects from \"../pages/projects/Projects\";\nimport Contact from \"../pages/contact/Contact\";\nimport Experience from \"../pages/experience/Experience\";\n\nconst MainRoutes : RouteProps[] = [\n    {\n        path: '/',\n        exact: true,\n        component: Home\n    },\n    {\n        path: '/about',\n        component: About\n    },\n    {\n        path: '/experience',\n        component: Experience\n    },\n    // {\n    //     path: '/skills',\n    //     component: Skills\n    // },\n    // {\n    //     path: '/projects',\n    //     component: Projects\n    // },\n    {\n        path: '/contact',\n        component: Contact\n    },\n    {\n        path: '*',\n        component: Home\n    }\n]\n\nexport default MainRoutes;","import React, { FC } from \"react\";\nimport ExperienceBox from \"../../components/ExperienceBox\";\n\nconst Experience : FC = () => {\n    return (\n        <div className=\"main-page\">\n            <div className=\"main-title\">Experience</div>\n            <div className=\"main-description\">\n                <div className=\"experience-rows\">\n                    <ExperienceBox\n                        company={\"Ahsay Systems Corporation Limited\"}\n                        logo={\"/company/ahsay.png\"}\n                        position={\"Mobile Application Developer\"}\n                        yearsWorked={\"June 2019 - \"}></ExperienceBox>\n                    <ExperienceBox\n                        company={\"PCCW Solutions\"}\n                        logo={\"/company/pccw.jpg\"}\n                        position={\"Solutions Developer\"}\n                        yearsWorked={\"May 2018 - May 2019\"}></ExperienceBox>\n                    <ExperienceBox\n                        company={\"Nokia Networks\"}\n                        logo={\"/company/nokia.png\"}\n                        position={\"R&D Engineer II\"}\n                        yearsWorked={\"June 2014 - May 2018\"}></ExperienceBox>\n                </div>\n            </div>\n        </div>\n    );\n}\nexport default Experience;","import React, { FC } from \"react\";\nimport { GitHub, Mail, Linkedin } from 'react-feather';\nimport \"./Contact.scss\";\nimport ContactIcon from \"../../components/ContactIcon\";\n\nconst Contact : FC = () => {\n    return (\n        <div className=\"main-page\">\n            <div className=\"main-title\">Getting in touch</div>\n            <div className=\"main-description\">Do you need an idea or an extra hand? Perhaps, I can help. You can contact me on <a className=\"description-link\" href=\"mailto:marione.semilla@gmail.com\">marione.semilla@gmail.com</a>.</div>\n            <div className=\"contact-icons\">\n                <ContactIcon link={\"https://github.com/marionejrs\"} iconComponent={<GitHub></GitHub>}></ContactIcon>\n                <ContactIcon link={\"mailto:marione.semilla@gmail.com\"} iconComponent={<Mail></Mail>}></ContactIcon>\n                <ContactIcon link={\"https://www.linkedin.com/in/marione-semilla-3b42a639/\"} iconComponent={<Linkedin></Linkedin>}></ContactIcon>\n            </div>\n        </div>\n    );\n}\nexport default Contact;","import './MainContainer.scss';\nimport React, { Component } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport MainRoutes from \"./MainRoutes\";\n\nexport default class MainContainer extends Component {\n    render() {\n        return (\n            <main>\n                <Switch>\n                    {MainRoutes.map((route, index) => <Route key={index} {...route}></Route>)}\n                </Switch>\n            </main>\n        );\n    }\n}","import \"./BackgroundEffect.scss\";\nimport React, { Component } from \"react\";\nimport {\n    PerspectiveCamera,\n    Scene,\n    BufferGeometry,\n    BufferAttribute,\n    ShaderMaterial,\n    Color,\n    Points,\n    WebGLRenderer } from \"three\";\n\nlet SEPARATION = 40;\nlet AMOUNTX = 130;\nlet AMOUNTY = 35;\nlet NUM_OF_PARTICLES = AMOUNTX * AMOUNTY;\n\nexport default class BackgroundEffect extends Component {\n\n    containerElement : HTMLDivElement;\n    camera : PerspectiveCamera;\n    scene : Scene;\n    renderer : WebGLRenderer;\n    particles : Points;\n    count : number;\n    windowHalfX : number;\n    windowHalfY : number;\n\n    constructor(props : any) {\n        super(props);\n        this.count = 0;\n    }\n\n    onWindowResize() {\n        this.windowHalfX = window.innerWidth / 2;\n        this.windowHalfY = window.innerHeight / 2;\n        \n        this.camera.aspect = window.innerWidth / window.innerHeight;\n        this.camera.updateProjectionMatrix();\n        \n        this.renderer.setSize( window.innerWidth, window.innerHeight );\n    }\n\n    componentDidMount() {\n        let camera = new PerspectiveCamera( 120, window.innerWidth / window.innerHeight, 1, 10000);\n        camera.position.y = 200;\n        camera.position.z = 100;\n        camera.rotation.x = 0.35;\n        this.camera = camera;\n\n        let positions = new Float32Array(NUM_OF_PARTICLES * 3);\n        let scales = new Float32Array(NUM_OF_PARTICLES);\n\n        let incrementI = 0;\n        let incrementJ = 0;\n\n        for (let indexX = 0; indexX < AMOUNTX; indexX++) {\n            for (let indexY = 0; indexY < AMOUNTY; indexY++) {\n                positions[incrementI] = indexX * SEPARATION - ( ( AMOUNTX * SEPARATION ) / 2); // x\n                positions[incrementI + 1] = 0; //y\n                positions[incrementI + 2] = indexY * SEPARATION - ( ( AMOUNTY * SEPARATION ) - 10); //z\n            \n                scales[incrementJ] = 1;\n\n                incrementI += 3;\n                incrementJ++;\n            }\n        }\n\n        let geometry = new BufferGeometry();\n        geometry.addAttribute( 'position', new BufferAttribute( positions, 3 ) );\n        geometry.addAttribute( 'scale', new BufferAttribute( scales, 1 ) );\n\n        let material = new ShaderMaterial({\n            uniforms : {\n                color: { value: new Color( 0x939393 ) },\n            },\n            vertexShader : `attribute float scale;\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\n\t\t\t\tgl_PointSize = scale * ( 35.0 / - mvPosition.z );\n\n\t\t\t\tgl_Position = projectionMatrix * mvPosition;\n\n\t\t\t}`,\n            fragmentShader : `uniform vec3 color;\n\n\t\t\tvoid main() {\n\n\t\t\t\tif ( length( gl_PointCoord - vec2( 0.5, 0.5 ) ) > 0.475 ) discard;\n\n\t\t\t\tgl_FragColor = vec4( color, 1.0 );\n\n\t\t\t}`\n        });\n\n        let particles = new Points(geometry, material);\n        this.scene = new Scene();\n        // this.scene.background = new Color( 0x0000 );\n        this.scene.add(particles);\n        this.particles = particles;\n\n        let renderer = new WebGLRenderer( { alpha : true, antialias : true } );\n        renderer.setPixelRatio( window.devicePixelRatio );\n        renderer.setSize( window.innerWidth, window.innerHeight );\n        renderer.setClearColor( 0xffffff, 0 );\n        this.renderer = renderer;\n\n        this.containerElement.appendChild( renderer.domElement );\n        this.animate();\n\n        window.addEventListener( 'resize', () => { this.onWindowResize() }, false);\n    }\n\n    animate() {\n        requestAnimationFrame( this.animate.bind(this) );        \n        // not necessary as camera will not be moved\n        // camera.position.x += ( mouseX - camera.position.x ) * .05;\n        // camera.position.y += ( - mouseY - camera.position.y ) * .05;\n        // camera.lookAt( scene.position );\n        this.renderCanvas();\n        \n    }\n\n    renderCanvas() {\n        let positionAttrib = (this.particles.geometry as BufferGeometry).getAttribute('position') as BufferAttribute;\n        let scaleAttrib = (this.particles.geometry as BufferGeometry).getAttribute('scale') as BufferAttribute;\n\n        let positions = positionAttrib.array as Float32Array;\n        let scales = scaleAttrib.array as Float32Array;\n\n        let incrementI = 0;\n        let incrementJ = 0;\n\n        for (let indexX = 0; indexX < AMOUNTX; indexX++) {\n            for (let indexY = 0; indexY < AMOUNTY; indexY++) {\n                positions[incrementI + 1] = ( Math.sin( ( indexX + this.count ) * 0.5 ) * 20 ) + ( Math.sin( ( indexY + this.count ) * 0.5 ) * 20 )\n            \n                scales[incrementJ] = ( Math.sin( ( indexX + this.count ) * 0.3 ) + 1 ) * 8 +\n                        ( Math.sin( ( indexY + this.count ) * 0.5 ) + 1 ) * 8;\n\n                incrementI += 3;\n                incrementJ++;\n            }\n        }\n\n        ((this.particles.geometry as BufferGeometry).getAttribute('position') as BufferAttribute).needsUpdate = true;\n        ((this.particles.geometry as BufferGeometry).getAttribute('position') as BufferAttribute).needsUpdate = true;\n\n        this.renderer.render( this.scene, this.camera );\n        this.count += 0.05;\n    }\n\n    render() {\n        return (\n            <div className='particle-container'\n                ref={(container) => this.containerElement = container}>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport ContactMail from './contact/ContactEmail';\nimport Sidebar from './sidebar/Sidebar';\nimport MainContainer from './main/MainContainer';\nimport BackgroundLogo from './background/logo/BackgroundLogo';\nimport BackgroundEffect from './background/effect/BackgroundEffect';\nimport MenuTrigger from \"./menu/trigger/MenuTrigger\";\nimport './App.scss';\nimport { HashRouter as Router } from \"react-router-dom\";\n\nconst App: React.FC = () => {\n  return (\n    <Router>\n      <div className=\"container\">\n          <section className=\"top-content\">\n            <ContactMail email=\"marione.semilla@gmail.com\"></ContactMail>\n          </section>\n          <section className=\"main-content\">\n            <Sidebar></Sidebar>\n            <MainContainer></MainContainer>\n          </section>\n          <BackgroundEffect></BackgroundEffect>\n      </div>\n    </Router>\n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'normalize.css';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport WebFont from 'webfontloader';\n\nWebFont.load({\n    google: {\n      families: ['Roboto:400,700', 'Montserrat:300,400', 'sans-serif']\n    }\n  });\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}